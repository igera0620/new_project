version: 2.1

executors:
  default:
    docker:
      - image: cimg/ruby:3.2.2  # Rubyの正しいイメージ
    working_directory: ~/app
    environment:
      BUNDLE_PATH: vendor/bundle  # バンドルのパス
      OPENAI_ACCESS_TOKEN: $OPENAI_ACCESS_TOKEN  # CircleCIで設定

jobs:
  checkout_code:
    executor: default
    steps:
      - checkout  # ソースコードを取得

  bundle_install:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install dependencies
          command: |
            mkdir -p vendor/bundle  # 手動でディレクトリ作成
            bundle config set --local path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
      - save_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  rubocop:
    executor: default
    docker:
      - image: cimg/ruby:3.2.2
      - image: cimg/postgres:15.1
        environment:
          POSTGRES_DB: test_db
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
    steps:
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Ensure bin is in PATH
          command: echo 'export PATH="vendor/bundle/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Run RuboCop
          command: bundle exec rubocop

  rspec:
    executor: default
    docker:
      - image: cimg/ruby:3.2.2
      - image: cimg/postgres:15.1
        environment:
          POSTGRES_DB: test_db
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
    environment:
      OPENAI_ACCESS_TOKEN: $OPENAI_ACCESS_TOKEN  # ここにも追加！
    steps:
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Ensure bin is in PATH
          command: echo 'export PATH="vendor/bundle/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Set up database
          command: |
            bin/rails db:create
            bin/rails db:migrate
      - run:
          name: Run RSpec
          command: bundle exec rspec

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - bundle_install:
          requires:
            - checkout_code
      - rubocop:
          requires:
            - bundle_install
      - rspec:
          requires:
            - bundle_install
